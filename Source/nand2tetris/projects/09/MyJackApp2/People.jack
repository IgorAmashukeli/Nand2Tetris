class People {
    field int location_;
    constructor People new(int location) {
        let location_ = location;
        return this;
    }

    method void setLocation(int location) {
        let location_ = location;
        return;
    }

    method void draw() {
        var int memAddress;
        let memAddress = 16384+location_;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 384);
        do Memory.poke(memAddress+64, 576);
        do Memory.poke(memAddress+96, 576);
        do Memory.poke(memAddress+128, 1440);
        do Memory.poke(memAddress+160, 960);
        do Memory.poke(memAddress+192, 1440);
        do Memory.poke(memAddress+224, 3024);
        do Memory.poke(memAddress+256, 960);
        do Memory.poke(memAddress+288, 384);
        do Memory.poke(memAddress+320, 384);
        do Memory.poke(memAddress+352, 960);
        do Memory.poke(memAddress+384, 960);
        do Memory.poke(memAddress+416, 2016);
        do Memory.poke(memAddress+448, 1056);
        do Memory.poke(memAddress+480, -961);
        return;
    }

    method void erase() {
        var int memAddress;
        let memAddress = 16384+location_;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }

    method void dispose() {
        do location_.deAlloc();
        return;
    }
}