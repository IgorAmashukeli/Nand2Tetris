function Screen.init 0
push constant 0
pop static 0
push constant 1
neg
pop static 1
push constant 16384
pop static 3
push constant 24576
pop static 4
push static 0
pop static 2
call Screen.clearScreen 0
pop temp 0
push static 1
pop static 2
push constant 16
call Array.new 1
pop static 5
push static 5
push constant 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 2
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 3
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 4
add
push constant 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 5
add
push constant 32
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 6
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 7
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 8
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 9
add
push constant 512
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 10
add
push constant 1024
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 11
add
push constant 2048
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 12
add
push constant 4096
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 13
add
push constant 8192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 14
add
push constant 16384
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push constant 15
add
push constant 32767
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Screen.clearScreen 1
push static 3
pop local 0
label WHILE1_0
push local 0
push static 4
lt
not
if-goto WHILE2_0
push local 0
push static 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE1_0
label WHILE2_0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 2
push constant 0
return
function Screen.setBit 0
push static 2
push static 1
eq
not
if-goto IF1_0
push argument 0
push static 5
push argument 1
add
pop pointer 1
push that 0
or
return
goto IF2_0
label IF1_0
push argument 0
push static 5
push argument 1
add
pop pointer 1
push that 0
not
and
return
label IF2_0
function Screen.drawPixel 3
push argument 0
push constant 0
lt
push argument 1
push constant 0
lt
or
push argument 0
push constant 511
gt
or
push argument 1
push constant 255
gt
or
not
if-goto IF1_0
push constant 7
call Sys.error 1
pop temp 0
goto IF2_0
label IF1_0
label IF2_0
push static 3
push constant 32
push argument 1
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push constant 16
call Math.mod 2
pop local 1
push local 0
call Memory.peek 1
pop local 2
push local 2
push local 1
call Screen.setBit 2
pop local 2
push local 0
push local 2
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawHorizontal 1
push argument 0
pop local 0
label WHILE1_0
push local 0
push argument 1
lt
push local 0
push argument 1
eq
or
not
if-goto WHILE2_0
push local 0
push argument 2
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE1_0
label WHILE2_0
push constant 0
return
function Screen.drawVertical 1
push argument 1
pop local 0
label WHILE1_0
push local 0
push argument 2
lt
push local 0
push argument 2
eq
or
not
if-goto WHILE2_0
push argument 0
push local 0
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE1_0
label WHILE2_0
push constant 0
return
function Screen.drawLinePixel 0
push argument 0
push argument 2
lt
push argument 1
push argument 3
lt
and
not
if-goto IF1_0
push argument 0
push argument 4
add
push argument 1
push argument 5
add
call Screen.drawPixel 2
pop temp 0
goto IF2_0
label IF1_0
push argument 0
push argument 2
lt
not
if-goto IF1_1
push argument 0
push argument 4
add
push argument 1
push argument 5
sub
call Screen.drawPixel 2
pop temp 0
goto IF2_1
label IF1_1
push argument 1
push argument 3
lt
not
if-goto IF1_2
push argument 0
push argument 4
sub
push argument 1
push argument 5
add
call Screen.drawPixel 2
pop temp 0
goto IF2_2
label IF1_2
push argument 0
push argument 4
sub
push argument 1
push argument 5
sub
call Screen.drawPixel 2
pop temp 0
label IF2_2
label IF2_1
label IF2_0
push constant 0
return
function Screen.drawDiagonal 5
push argument 2
push argument 0
sub
call Math.abs 1
pop local 0
push argument 3
push argument 1
sub
call Math.abs 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
label WHILE1_0
push local 2
push local 0
lt
push local 2
push local 0
eq
or
push local 3
push local 1
lt
push local 3
push local 1
eq
or
and
not
if-goto WHILE2_0
push argument 0
push argument 1
push argument 2
push argument 3
push local 2
push local 3
call Screen.drawLinePixel 6
pop temp 0
push local 2
push local 1
call Math.multiply 2
push local 3
push local 0
call Math.multiply 2
sub
pop local 4
push local 4
push constant 0
lt
not
if-goto IF1_1
push local 2
push constant 1
add
pop local 2
push local 4
push local 1
add
pop local 4
goto IF2_1
label IF1_1
push local 3
push constant 1
add
pop local 3
push local 4
push local 0
sub
pop local 4
label IF2_1
goto WHILE1_0
label WHILE2_0
push constant 0
return
function Screen.drawLine 0
push argument 0
push constant 0
lt
push argument 2
push constant 0
lt
or
push argument 1
push constant 0
lt
or
push argument 3
push constant 0
lt
or
push argument 0
push constant 511
gt
or
push argument 2
push constant 511
gt
or
push argument 1
push constant 255
gt
or
push argument 3
push constant 255
gt
or
not
if-goto IF1_0
push constant 8
call Sys.error 1
pop temp 0
goto IF2_0
label IF1_0
label IF2_0
push argument 1
push argument 3
eq
not
if-goto IF1_1
push argument 0
push argument 2
call Math.min 2
push argument 0
push argument 2
call Math.max 2
push argument 1
call Screen.drawHorizontal 3
pop temp 0
goto IF2_1
label IF1_1
push argument 0
push argument 2
eq
not
if-goto IF1_2
push argument 0
push argument 1
push argument 3
call Math.min 2
push argument 1
push argument 3
call Math.max 2
call Screen.drawVertical 3
pop temp 0
goto IF2_2
label IF1_2
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawDiagonal 4
pop temp 0
label IF2_2
label IF2_1
push constant 0
return
function Screen.drawRectangle 3
push argument 0
push constant 0
lt
push argument 2
push constant 0
lt
or
push argument 1
push constant 0
lt
or
push argument 3
push constant 0
lt
or
push argument 0
push constant 511
gt
or
push argument 2
push constant 511
gt
or
push argument 1
push constant 255
gt
or
push argument 3
push constant 255
gt
or
not
if-goto IF1_0
push constant 9
call Sys.error 1
pop temp 0
goto IF2_0
label IF1_0
label IF2_0
push argument 1
push argument 3
call Math.min 2
pop local 0
push argument 1
push argument 3
call Math.max 2
pop local 1
push local 0
pop local 2
label WHILE1_1
push local 2
push local 1
lt
push local 2
push local 1
eq
or
not
if-goto WHILE2_1
push argument 0
push argument 2
call Math.min 2
push argument 0
push argument 2
call Math.max 2
push local 2
call Screen.drawHorizontal 3
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE1_1
label WHILE2_1
push constant 0
return
function Screen.drawCircle 2
push argument 0
push constant 0
lt
push argument 1
push constant 0
lt
or
push argument 0
push constant 511
gt
or
push argument 1
push constant 255
gt
or
not
if-goto IF1_0
push constant 12
call Sys.error 1
pop temp 0
goto IF2_0
label IF1_0
label IF2_0
push argument 2
push constant 0
lt
push argument 2
push constant 181
gt
or
not
if-goto IF1_1
push constant 13
call Sys.error 1
pop temp 0
goto IF2_1
label IF1_1
label IF2_1
push argument 2
neg
pop local 1
label WHILE1_2
push local 1
push argument 2
lt
push local 1
push argument 2
eq
or
not
if-goto WHILE2_2
push argument 2
push argument 2
call Math.multiply 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 0
push local 0
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE1_2
label WHILE2_2
push constant 0
return
